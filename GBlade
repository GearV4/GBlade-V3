local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==4) then function v36()local v43=v35();local v44=v35();local v45=1;local v46=(v32(v44,1,20) * (2^(11 + 21))) + v43 ;local v47=v32(v44,21,31);local v48=((v32(v44,32)==1) and  -(932 -(857 + 74))) or 1 ;if (v47==(568 -(367 + 201))) then if (v46==0) then return v48 * 0 ;else local v96=0;while true do if (v96==0) then v47=1;v45=927 -(214 + 713) ;break;end end end elseif (v47==2047) then return ((v46==0) and (v48 * (1/0))) or (v48 * NaN) ;end return v16(v48,v47-1023 ) * (v45 + (v46/((2 + 0)^52))) ;end v37=nil;function v37(v49)local v50=0;local v51;local v52;while true do if (v50==0) then v51=nil;if  not v49 then local v116=0;while true do if (v116==0) then v49=v35();if (v49==0) then return "";end break;end end end v50=1;end if (v50==3) then return v14(v52);end if (v50==2) then v52={};for v97=1, #v51 do v52[v97]=v10(v9(v11(v51,v97,v97)));end v50=3;end if (1==v50) then v51=v11(v27,v30,(v30 + v49) -(1 + 0) );v30=v30 + v49 ;v50=2;end end end v29=5;end if (5==v29) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==6) then v40=nil;function v40()local v53={};local v54={};local v55={};local v56={v53,v54,nil,v55};local v57=v35();local v58={};for v80=4 -3 ,v57 do local v81=0;local v82;local v83;while true do if (v81==1) then if (v82==1) then v83=v33()~=0 ;elseif (v82==2) then v83=v36();elseif (v82==3) then v83=v37();end v58[v80]=v83;break;end if (v81==0) then v82=v33();v83=nil;v81=1;end end end v56[880 -(282 + 595) ]=v33();for v84=1,v35() do local v85=0;local v86;while true do if (0==v85) then v86=v33();if (v32(v86,3 -2 ,1)==(0 -0)) then local v120=0;local v121;local v122;local v123;while true do if (3==v120) then if (v32(v122,1068 -(68 + 997) ,3)==(1 + 0)) then v123[4]=v58[v123[4]];end v53[v84]=v123;break;end if (v120==1) then v123={v34(),v34(),nil,nil};if (v121==0) then v123[862 -(814 + 45) ]=v34();v123[4]=v34();elseif (v121==1) then v123[3]=v35();elseif (v121==2) then v123[3]=v35() -(2^(15 + 1)) ;elseif (v121==3) then v123[3]=v35() -(2^16) ;v123[4]=v34();end v120=2;end if (v120==2) then if (v32(v122,1,1)==1) then v123[2]=v58[v123[4 -2 ]];end if (v32(v122,2,2)==(1 -0)) then v123[1 + 2 ]=v58[v123[3]];end v120=3;end if (v120==0) then v121=v32(v86,2,3);v122=v32(v86,1641 -(1523 + 114) ,6);v120=1;end end end break;end end end for v87=886 -(261 + 624) ,v35() do v54[v87-(1271 -(226 + 1044)) ]=v40();end return v56;end v41=nil;v29=7;end if (v29==2) then function v33()local v60=0;local v61;while true do if (v60==1) then return v61;end if (v60==0) then v61=v9(v27,v30,v30);v30=v30 + 1 ;v60=1;end end end v34=nil;function v34()local v62=0;local v63;local v64;while true do if (v62==1) then return (v64 * (686 -(44 + 386))) + v63 ;end if (v62==0) then v63,v64=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v62=1;end end end v29=3;end if (v29==7) then function v41(v65,v66,v67)local v68=0;local v69;local v70;local v71;while true do if (v68==0) then v69=v65[1];v70=v65[2];v68=1;end if (v68==1) then v71=v65[3];return function(...)local v100=v69;local v101=v70;local v102=v71;local v103=v39;local v104=1;local v105= -(1 -0);local v106={};local v107={...};local v108=v20("#",...) -1 ;local v109={};local v110={};for v117=1080 -(1020 + 60) ,v108 do if (v117>=v102) then v106[v117-v102 ]=v107[v117 + 1 ];else v110[v117]=v107[v117 + (4 -3) ];end end local v111=(v108-v102) + 1 ;local v112;local v113;while true do v112=v100[v104];v113=v112[1];if (v113<=38) then if (v113<=18) then if (v113<=(26 -18)) then if (v113<=3) then if (v113<=1) then if (v113==0) then v110[v112[2]][v110[v112[3]]]=v110[v112[4]];else local v143=0;local v144;local v145;local v146;local v147;while true do if (v143==1) then v105=(v146 + v144) -1 ;v147=0;v143=2;end if (v143==2) then for v344=v144,v105 do v147=v147 + 1 + 0 ;v110[v344]=v145[v147];end break;end if (v143==0) then v144=v112[2];v145,v146=v103(v110[v144](v110[v144 + (118 -(32 + 85)) ]));v143=1;end end end elseif (v113==(9 -7)) then local v148=0;local v149;while true do if (0==v148) then v149=v112[1 + 1 ];v110[v149]=v110[v149]();break;end end else local v150=0;local v151;local v152;local v153;local v154;while true do if (0==v150) then v151=v112[959 -(892 + 65) ];v152,v153=v103(v110[v151](v21(v110,v151 + 1 ,v112[3])));v150=1;end if (v150==1) then v105=(v153 + v151) -1 ;v154=0;v150=2;end if (v150==2) then for v347=v151,v105 do local v348=0;while true do if (v348==0) then v154=v154 + 1 ;v110[v347]=v152[v154];break;end end end break;end end end elseif (v113<=5) then if (v113>4) then if v110[v112[2]] then v104=v104 + 1 + 0 ;else v104=v112[3];end else v110[v112[2]]=v112[3]~=0 ;end elseif (v113<=6) then v110[v112[2]]=v110[v112[3]] + v112[4] ;elseif (v113==7) then local v230=v101[v112[3]];local v231;local v232={};v231=v18({},{[v7("\214\190\75\251\237\132\90","\149\137\225\34")]=function(v294,v295)local v296=0;local v297;while true do if (0==v296) then v297=v232[v295];return v297[2 -1 ][v297[2]];end end end,[v7("\13\197\225\53\235\193\60\254\234\40","\168\82\154\143\80\156")]=function(v298,v299,v300)local v301=0;local v302;while true do if (v301==0) then v302=v232[v299];v302[1][v302[2]]=v300;break;end end end});for v303=1,v112[4] do v104=v104 + 1 ;local v304=v100[v104];if (v304[1]==37) then v232[v303-1 ]={v110,v304[5 -2 ]};else v232[v303-1 ]={v66,v304[3]};end v109[ #v109 + 1 ]=v232;end v110[v112[2]]=v41(v230,v231,v67);else local v234=v112[3 -1 ];v110[v234](v21(v110,v234 + 1 ,v105));end elseif (v113<=(1760 -(760 + 987))) then if (v113<=10) then if (v113>9) then v104=v112[3];else v110[v112[352 -(87 + 263) ]]= #v110[v112[3]];end elseif (v113<=11) then v110[v112[2]]=v110[v112[1916 -(1789 + 124) ]][v112[770 -(745 + 21) ]];elseif (v113>12) then v110[v112[2]][v112[3]]=v110[v112[2 + 2 ]];else v110[v112[182 -(67 + 113) ]][v112[3]]=v110[v112[4]];end elseif (v113<=15) then if (v113==14) then if ((v112[3]==v7("\186\151\29\61","\233\229\210\83\107\40\46")) or (v112[7 -4 ]==v7("\198\71\38\208\0\207\84","\101\161\34\82\182"))) then v110[v112[2]]=v67;else v110[v112[2]]=v67[v112[3]];end else v110[v112[2]]=v66[v112[3 + 0 ]];end elseif (v113<=16) then local v163=v112[2];v110[v163](v21(v110,v163 + (3 -2) ,v105));elseif (v113==17) then local v242=0;local v243;local v244;while true do if (v242==0) then v243=v112[2];v244=v110[v112[3]];v242=1;end if (1==v242) then v110[v243 + 1 ]=v244;v110[v243]=v244[v112[4]];break;end end else v110[v112[2]]= #v110[v112[1 + 2 ]];end elseif (v113<=28) then if (v113<=23) then if (v113<=20) then if (v113==19) then v110[v112[2]]={};elseif ((v112[3]==v7("\215\40\119\200","\78\136\109\57\158\187\130\226")) or (v112[3]==v7("\57\58\237\247\59\49\239","\145\94\95\153"))) then v110[v112[2]]=v67;else v110[v112[2]]=v67[v112[3]];end elseif (v113<=21) then local v165=0;local v166;local v167;local v168;while true do if (v165==1) then v168=v110[v166 + 2 ];if (v168>0) then if (v167>v110[v166 + 1 ]) then v104=v112[3];else v110[v166 + 3 ]=v167;end elseif (v167<v110[v166 + 1 ]) then v104=v112[3];else v110[v166 + 3 ]=v167;end break;end if (v165==0) then v166=v112[2 + 0 ];v167=v110[v166];v165=1;end end elseif (v113==22) then v110[v112[4 -2 ]]=v110[v112[3 + 0 ]] + v112[4] ;else local v250=0;local v251;while true do if (v250==0) then v251=v112[2];v110[v251]=v110[v251](v21(v110,v251 + 1 ,v105));break;end end end elseif (v113<=25) then if (v113>24) then v110[v112[2]]=v66[v112[11 -8 ]];else for v223=v112[2],v112[3] do v110[v223]=nil;end end elseif (v113<=26) then local v171=v112[954 -(802 + 150) ];local v172,v173=v103(v110[v171](v21(v110,v171 + 1 ,v105)));v105=(v173 + v171) -1 ;local v174=0;for v225=v171,v105 do v174=v174 + 1 ;v110[v225]=v172[v174];end elseif (v113==(25 + 2)) then local v252=0;local v253;while true do if (v252==0) then v253=v112[2];do return v21(v110,v253,v105);end break;end end else local v254=v112[2];local v255,v256=v103(v110[v254](v21(v110,v254 + 1 ,v112[3])));v105=(v256 + v254) -1 ;local v257=0;for v309=v254,v105 do v257=v257 + 1 ;v110[v309]=v255[v257];end end elseif (v113<=33) then if (v113<=(67 -37)) then if (v113>29) then v110[v112[2]]=v112[3] + v110[v112[10 -6 ]] ;else local v176=v112[2];v110[v176]=v110[v176]();end elseif (v113<=31) then local v178=0;local v179;local v180;local v181;while true do if (v178==1) then v181=v110[v179] + v180 ;v110[v179]=v181;v178=2;end if (v178==0) then v179=v112[2];v180=v110[v179 + 2 ];v178=1;end if (v178==2) then if (v180>(0 -0)) then if (v181<=v110[v179 + 1 ]) then local v382=0;while true do if (v382==0) then v104=v112[3];v110[v179 + (5 -2) ]=v181;break;end end end elseif (v181>=v110[v179 + (702 -(376 + 325)) ]) then local v383=0;while true do if (v383==0) then v104=v112[3];v110[v179 + 3 + 0 ]=v181;break;end end end break;end end elseif (v113==32) then v110[v112[2]][v110[v112[3]]]=v112[5 -1 ];else do return v110[v112[2]]();end end elseif (v113<=35) then if (v113==34) then v110[v112[999 -(915 + 82) ]]();else local v182=0;local v183;local v184;while true do if (v182==0) then v183=v112[2];v184=v110[v183];v182=1;end if (v182==1) then for v349=v183 + 1 ,v105 do v15(v184,v110[v349]);end break;end end end elseif (v113<=(101 -65)) then local v185=0;local v186;while true do if (0==v185) then v186=v112[2];v110[v186]=v110[v186](v21(v110,v186 + 1 ,v105));break;end end elseif (v113==37) then v110[v112[2]]=v110[v112[1 + 2 ]];else for v319=v112[2],v112[3] do v110[v319]=nil;end end elseif (v113<=(125 -68)) then if (v113<=47) then if (v113<=42) then if (v113<=40) then if (v113>39) then local v187=0;local v188;while true do if (v187==0) then v188=v112[2];v110[v188](v21(v110,v188 + (15 -(9 + 5)) ,v112[3]));break;end end else local v189=v112[2];local v190=v110[v189];for v228=v189 + 1 ,v105 do v15(v190,v110[v228]);end end elseif (v113>41) then v104=v112[379 -(85 + 291) ];else local v192=0;local v193;while true do if (0==v192) then v193=v112[2];do return v110[v193](v21(v110,v193 + 1 + 0 ,v112[3]));end break;end end end elseif (v113<=44) then if (v113==43) then v110[v112[2]]={};else v110[v112[2]][v110[v112[3]]]=v110[v112[4]];end elseif (v113<=45) then do return;end elseif (v113>46) then local v262=v112[2];v110[v262](v21(v110,v262 + 1 ,v112[3]));else local v263=v101[v112[3]];local v264;local v265={};v264=v18({},{[v7("\194\242\29\219\74\178\229","\215\157\173\116\181\46")]=function(v323,v324)local v325=0;local v326;while true do if (v325==0) then v326=v265[v324];return v326[1][v326[2]];end end end,[v7("\10\139\133\247\205\60\186\143\247\194","\186\85\212\235\146")]=function(v327,v328,v329)local v330=v265[v328];v330[1][v330[2]]=v329;end});for v332=1,v112[4] do local v333=0;local v334;while true do if (1==v333) then if (v334[1]==37) then v265[v332-1 ]={v110,v334[3]};else v265[v332-1 ]={v66,v334[3]};end v109[ #v109 + 1 ]=v265;break;end if (0==v333) then v104=v104 + 1 ;v334=v100[v104];v333=1;end end end v110[v112[1267 -(243 + 1022) ]]=v41(v263,v264,v67);end elseif (v113<=52) then if (v113<=49) then if (v113>(182 -134)) then if (v110[v112[2]]==v112[4 + 0 ]) then v104=v104 + 1 ;else v104=v112[1183 -(1123 + 57) ];end else local v197=0;local v198;local v199;local v200;local v201;while true do if (v197==2) then for v350=v198,v105 do v201=v201 + 1 ;v110[v350]=v199[v201];end break;end if (v197==1) then v105=(v200 + v198) -(1 + 0) ;v201=0;v197=2;end if (v197==0) then v198=v112[2];v199,v200=v103(v110[v198](v110[v198 + 1 ]));v197=1;end end end elseif (v113<=50) then v110[v112[2]]=v110[v112[3]][v112[4]];elseif (v113>51) then do return v110[v112[2]]();end else v110[v112[2]]=v110[v112[3]]%v112[4] ;end elseif (v113<=54) then if (v113==53) then if v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end else local v204=0;local v205;while true do if (v204==0) then v205=v112[2];v110[v205]=v110[v205](v21(v110,v205 + 1 ,v112[3]));break;end end end elseif (v113<=(72 -17)) then if  not v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>(1243 -(1069 + 118))) then local v271=v112[2];local v272,v273=v103(v110[v271](v21(v110,v271 + 1 ,v105)));v105=(v273 + v271) -1 ;local v274=0;for v338=v271,v105 do v274=v274 + 1 ;v110[v338]=v272[v274];end else local v275=0;local v276;while true do if (v275==0) then v276=v112[2];v110[v276]=v110[v276](v21(v110,v276 + (2 -1) ,v112[3]));break;end end end elseif (v113<=67) then if (v113<=62) then if (v113<=59) then if (v113>58) then v110[v112[2]]=v110[v112[3]]%v112[4] ;else v110[v112[2]]=v112[3]~=0 ;end elseif (v113<=60) then v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;elseif (v113>(133 -72)) then if (v110[v112[2]]==v112[4]) then v104=v104 + 1 ;else v104=v112[257 -(163 + 91) ];end else v110[v112[1 + 1 ]]=v41(v101[v112[3]],nil,v67);end elseif (v113<=64) then if (v113==(111 -48)) then v110[v112[2]]=v112[3 + 0 ] + v110[v112[4]] ;else local v210=v112[2];do return v21(v110,v210,v105);end end elseif (v113<=65) then v110[v112[2]]=v112[3];elseif (v113==(1996 -(1869 + 61))) then local v278=0;local v279;local v280;local v281;while true do if (v278==0) then v279=v112[2];v280=v110[v279 + 2 ];v278=1;end if (v278==2) then if (v280>0) then if (v281<=v110[v279 + 1 ]) then v104=v112[1 + 2 ];v110[v279 + 3 ]=v281;end elseif (v281>=v110[v279 + 1 ]) then v104=v112[794 -(368 + 423) ];v110[v279 + 3 ]=v281;end break;end if (v278==1) then v281=v110[v279] + v280 ;v110[v279]=v281;v278=2;end end elseif  not v110[v112[2]] then v104=v104 + (3 -2) ;else v104=v112[3];end elseif (v113<=(109 -37)) then if (v113<=69) then if (v113>(10 + 58)) then v110[v112[2]]();else local v213=0;local v214;local v215;local v216;while true do if (v213==0) then v214=v112[2];v215=v110[v214];v213=1;end if (v213==1) then v216=v110[v214 + 2 ];if (v216>0) then if (v215>v110[v214 + (3 -2) ]) then v104=v112[3];else v110[v214 + (21 -(10 + 8)) ]=v215;end elseif (v215<v110[v214 + 1 ]) then v104=v112[3];else v110[v214 + (11 -8) ]=v215;end break;end end end elseif (v113<=70) then v110[v112[2]]=v112[1477 -(1329 + 145) ];elseif (v113==71) then do return;end else v110[v112[2]]=v110[v112[974 -(140 + 831) ]];end elseif (v113<=(516 -(416 + 26))) then if (v113==73) then local v219=v112[2];do return v110[v219](v21(v110,v219 + 1 ,v112[9 -6 ]));end else v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;end elseif (v113<=75) then v110[v112[1 + 1 ]][v110[v112[3]]]=v112[4];elseif (v113==76) then v110[v112[2]]=v41(v101[v112[3]],nil,v67);else local v285=v112[2];local v286=v110[v112[3]];v110[v285 + 1 ]=v286;v110[v285]=v286[v112[4]];end v104=v104 + 1 ;end end;end end end return v41(v40(),{},v28)(...);end if (v29==3) then v35=nil;function v35()local v72,v73,v74,v75=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;return (v75 * (16778702 -(998 + 488))) + (v74 * 65536) + (v73 * (875 -(555 + 64))) + v72 ;end v36=nil;v29=4;end if (v29==1) then v32=nil;function v32(v76,v77,v78)if v78 then local v89=(v76/(2^(v77-1)))%(2^(((v78-1) -(v77-1)) + (439 -(145 + 293)))) ;return v89-(v89%(2 -1)) ;else local v90=2^(v77-(1 -0)) ;return (((v76%(v90 + v90))>=v90) and (2 -1)) or 0 ;end end v33=nil;v29=2;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\140\207","\56\162\225\118\158\89\142"),function(v79)if (v9(v79,2)==(246 -167)) then local v91=0;while true do if (v91==0) then v31=v8(v11(v79,1,1 -0 ));return "";end end else local v92=v10(v8(v79,16));if v31 then local v114=0;local v115;while true do if (0==v114) then v115=v13(v92,v31);v31=nil;v114=1;end if (v114==1) then return v115;end end else return v92;end end end);v29=1;end end end vv17(),...);
